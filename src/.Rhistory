source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
plot(cluster, hang = -1000)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
result
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
result
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`, 18:25]
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`]
necessary_data
result$`1`
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`,]
result
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`,]
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`,]
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`2`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`3`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`2`,]
result$`2`
row.names(necessary_data) %in% result$`2`
tmp <- necessary_data[row.names(necessary_data) %in% result$`3`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`4`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`5`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`6`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`5`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`4`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`3`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`1`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`4`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`5`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`6`,]
tmp <- necessary_data[row.names(necessary_data) %in% result$`3`,]
View(necessary_data)
View(original_data)
"ハルウララ" %in% result
"ハル" %in% result
"ハル" %in% result$`1`
"ハルウララ" %in% result$`1`
"ハルウララ" %in% result$`2`
result %in% "ハルウララ"
teamrace_data <- read.csv("../data/umamusume_team_race_usage_rate_ranking.csv")
teamrace_data
View(teamrace_data)
result $in% teamrace_data
result %in% teamrace_data
source('~/.active-rstudio-document', echo=TRUE)
groups
k
result
apply(teamrace_data, c(1, 2), function(x) (1:k)[result %in% x])
apply(teamrace_data, c(1, 2), print
)
apply(teamrace_data, c(1, 2), print)
(1:k)[result %in% "ハルウララ"]
teamrace_data[1,]
apply(teamrace_data[1,], c(1, 2), function(x) (1:k)[result %in% x])
fn <- function(x) (1:k)[result %in% x]
fn("ハルウララ")
apply(teamrace_data[1,], c(1, 2), fn
)
groups <- apply(teamrace_data, c(1, 2), function(x) (1:k)[result %in% x])
groups
groups <- apply(teamrace_data, c(1, 2), function(x) paste(x, (1:k)[result %in% x]))
groups
source('~/.active-rstudio-document', echo=TRUE)
groups
fn("サクラバクシンオー")
fn("ハルウララ")
result$`1`
"サクラバクシンオー" %in% result
result %in% "サクラバクシンオー"
result$`2` %in% "サクラバクシンオー"
lapply(result, function(l) "サクラバクシンオー" %in% l)
sapply(result, function(l) "サクラバクシンオー" %in% l)
sapply(result, function(l) "サクラバクシンオー" %in% l)[TRUE]
sapply(result, function(l) "サクラバクシンオー" %in% l)[FALSE]
sapply(result, function(l) "サクラバクシンオー" %in% l)[TRUE]
sapply(result, function(l) "サクラバクシンオー" %in% l)[1]
source('~/.active-rstudio-document', echo=TRUE)
groups
View(necessary_data)
View(teamrace_data)
View(original_data)
source('~/.active-rstudio-document', echo=TRUE)
View(groups)
View(groups)
View(teamrace_data)
View(original_data)
# classify.Rの実行
source("./classify.R")
# データ
teamrace_data <- read.csv("../data/umamusume_team_race_status.csv")
View(teamrace_data)
# データ
teamrace_data <- read.csv("../data/umamusume_team_race_status.csv", row.names = 1)
row.names(teamrace_data)
row.names(teamrace_data) %in% result$`1`
# クラスタ1
teamrace_data[row.names(teamrace_data) %in% result$`1`]
# クラスタ1
teamrace_data[row.names(teamrace_data) %in% result$`1`,]
# クラスタ1
mean(teamrace_data[row.names(teamrace_data) %in% result$`1`,])
?mean
# クラスタ1
avg1 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`1`,], 2, mean)
avg1
# 各クラスタの目標ステータス
avg1 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`1`,], 2, mean)
avg2 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`2`,], 2, mean)
avg3 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`3`,], 2, mean)
avg4 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`4`,], 2, mean)
avg5 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`5`,], 2, mean)
avg6 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`6`,], 2, mean)
source('~/Documents/R/夏課題/src/teamrace.R', echo=TRUE)
source("./teamrace.R")
View(necessary_data)
# 分類データの保存
get_cluster_number <- function(x) (1:k)[sapply(result, function(l) x %in% l)]
get_cluster_number(row.names(necessary_data))
get_cluster_number(row.names("ハルウララ"))
"ハルウララ" %in% result$`1`
"ハルウララ" %in% result$`2`
apply(row.names(necessary_data), get_cluster_number)
apply(row.names(necessary_data), 1, get_cluster_number)
apply(row.names(necessary_data), 2, get_cluster_number)
spply(row.names(necessary_data), get_cluster_number)
sapply(row.names(necessary_data), get_cluster_number)
class <- sapply(row.names(necessary_data), get_cluster_number)
class
cbind(class, necessary_data)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
# 各クラスタの目標ステータス
status <- data.frame()
status[1] <- apply(teamrace_data[row.names(teamrace_data) %in% result$`1`,], 2, mean)
# 各クラスタの目標ステータス
status <- data.frame()
status <- rbind(status, apply(teamrace_data[row.names(teamrace_data) %in% result$`1`,], 2, mean))
# 各クラスタの目標ステータス
avg1 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`1`,], 2, mean)
avg2 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`2`,], 2, mean)
avg3 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`3`,], 2, mean)
avg4 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`4`,], 2, mean)
avg5 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`5`,], 2, mean)
avg6 <- apply(teamrace_data[row.names(teamrace_data) %in% result$`6`,], 2, mean)
avg1
status <- rbind(avg1, avg2, avg3, avg4, avg5, avg6)
status
status <- round(rbind(avg1, avg2, avg3, avg4, avg5, avg6))
status
source('~/Documents/R/夏課題/src/teamrace.R', echo=TRUE)
# 学習データセット
dataset <- read.csv("../data/dataset.csv")
View(dataset)
# 学習データセット
dataset <- read.csv("../data/dataset.csv", row.names = 1)
View(dataset)
inputs <- dataset[2:11]
inputs
outputs <- dataset[1]
as.matrix(outputs)
outputs
source('~/.active-rstudio-document', echo=TRUE)
dataset[1]
inputs <- (dataset[2:11] - 1) / 6
inputs
1:6 == 1
sapply(dataset[1], print)
apply(dataset[1], print)
apply(dataset[1], 1, print)
apply(dataset[1], 1, function(x) 1:6 == x)
tmp <- apply(dataset[1], 1, function(x) 1:6 == x)
View(tmp)
tmp <- apply(dataset[1], 2, function(x) 1:6 == x)
tmp <- apply(dataset[1], 1, function(x) x == 1)
tmp
dataset[1]
tmp2 <- apply(dataset[1], 1, function(x) x == 2)
tmp2
rbind(tmp1, tmp2)
rbind(tmp, tmp2)
cbind(tmp, tmp2)
inputs <- (dataset[2:11] - 1) / 6
is_one <- apply(dataset[1], 1, function(x) x == 1)
is_two <- apply(dataset[1], 1, function(x) x == 2)
is_three <- apply(dataset[1], 1, function(x) x == 3)
is_four <- apply(dataset[1], 1, function(x) x == 4)
is_five <- apply(dataset[1], 1, function(x) x == 5)
is_six <- apply(dataset[1], 1, function(x) x == 6)
outputs <- cbind(is_one, is_two, is_three, is_four, is_five, is_six)
outputs
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
outputs
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
outputs
outputs <- cbind(is_one, is_two, is_three, is_four, is_five, is_six)
mode(outputs) <- "integer"
outputs
train <- mlptrain(inputs, neurons = c(7, 5), outputs, it = 1000)
train <- rbftrain(inputs, neurons = c(7, 5), outputs, it = 1000)
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
inputs <- as.matrix((dataset[2:11] - 1) / 6)
inputs
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
train <- rbftrain(inputs, neurons = 7, outputs, it = 1000)
train <- mlptrain(inputs, neurons = 7, outputs, it = 1000)
# ライブラリ
install.packages("keras", dependencies = T)
library(keras)
install_keras()
Y
# ライブラリ
# install.packages("keras", dependencies = T)
library(keras)
# install_keras()
library(neuralnet)
library(tidyverse)
library(magrittr)
# 学習データセット
dataset <- read.csv("../data/dataset.csv", row.names = 1)
dataset <- as.matrix(dataset)
dimnames(dataset) <- NULL
set.seed(1234)
ind <- sample(2, nrow(dataset), replace = T, prob = c(0.7, 0.3))
X_train <- dataset[ind == 1, 2:11]
Y_train <- to_categorical(dataset[ind == 1, 1] - 1)
X_test <- dataset[ind == 2, 2:11]
Y_test <- to_categorical(dataset[ind == 2, 1] - 1)
Y_train
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
model <- keras_model_sequential()
model %>%
layer_dense(units = 10,
activation = "relu",
input_shape = c(10)) %>%
layer_dense(units = 7,
activation = "softmax")
summary(model)
model %>% compile(loss = "categorical_crossentropy",
optimizer = "adam",
metrics = "accuracy")
history <- model %>% fit(X_train,
Y_train,
epochs = 500,
batch_size = 10,
validation_split = 0.2)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
dataset
history <-
model %>% fit(X_train,
Y_train,
epochs = 500,
batch_size = 10,
validation_split = 0.2)
dataset
dataset
X_train
history <-
model %>% fit(X_train,
Y_train,
epochs = 500,
batch_size = 10,
validation_split = 0.2)
history <-
model %>% fit(X_train,
Y_train,
epochs = 500,
batch_size = 10,
validation_split = 0.2)
install.packages("reticulate")
reticulate::py_config()
tf_config()
sessionInfo()
X_train
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
View(X_test)
summary(model)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
history
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
# 結果の検証
print(history)
pred <- model %>% predict_classes(X_test)
pred <- model %>% predict(X_test) %>% k_argmax()
table(Y_test, pred)
pred
pred <- model %>% predict(X_test)
table(Y_test, pred)
pred <- model %>% predict(X_test) %>% k_argmax()
pred
as.array(pred)
pred <- as.array(model %>% predict(X_test) %>% k_argmax())
table(Y_test, pred)
pred <- model %>% predict(X_test)
table(Y_test, pred)
pred
Y_test
res <- pred %>% k_argmax()
ewa
res
res <- as.array(pred %>% k_argmax())
res
pred = 0
pred
pred <- model %>% predict(X_test)
res <- as.array(pred %>% k_argmax())
model %>% evaluate(X_test, Y_test)
# 結果の検証
print(history)
pred <- as.array(model %>% predict(X_test) %>% k_argmax())
print(pred)
print(as.array(Y_test %>% k_argmax()))
model %>% evaluate(X_test, Y_test)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
# モデルの保存
save_model_hdf5(model, "model1.h5")
# モデルの保存
save_model_hdf5(model, "../model/model1.h5")
# 新たなウマ娘情報
new_data <- c("A", "G", "A", "B", "F", "G", "A", "C", "E", "G")
alphabet <- c('A', 'B', 'C', 'D', 'E', 'F', 'G')
A_Gto1_7 <- function(a) (1:7)[alphabet == a]
new_data <- sapply(new_data, A_Gto1_7)
m
summary(m)
rbind(m, s)
ms <- rbind(m, s)
names(ms) <- names(dataset[2:11])
ms
names(ms)
names(dataset[2:11])
names(ms) <- names(data[2:11])
ms
View(ms)
# データセット
data <- read.csv("../data/dataset.csv", row.names = 1)
names(ms) <- names(data[2:11])
ms
ms <- rbind(m, s)
col.names(ms) <- names(data[2:11])
names(data[2:11])
names(ms) <- names(data[2:11])
View(ms)
colnames(ms)
colnames(ms) <- names(data[2:11])
ms
ms <- rbind(m, s)
colnames(ms) <- names(data[2:11])
ms
write.csv(ms, "../data/ms.csv")
ms <- read.csv("../data/ms.csv", row.names = 1)
m <- [1,]
m <- ms[1,]
s <- ms[2,]
m
s
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
m
new_data
# 新たなウマ娘情報
new_data <- c("A", "G", "A", "B", "F", "G", "A", "C", "E", "G")
A_Gto1_7(new_data)
alphabet <- c('A', 'B', 'C', 'D', 'E', 'F', 'G')
A_Gto1_7 <- function(a) (1:7)[alphabet == a]
new_data <- sapply(new_data, A_Gto1_7)
ms <- read.csv("../data/ms.csv", row.names = 1)
m <- ms[1,]
s <- ms[2,]
new_data <- scale(new_data, center = m, scale = s)
m
s
new_data <- as.matrix(sapply(new_data, A_Gto1_7))
new_data
new_data <- apply(new_data, 1, A_Gto1_7)
new_data <- apply(new_data, 2, A_Gto1_7)
# 新たなウマ娘情報
new_data <- c("A", "G", "A", "B", "F", "G", "A", "C", "E", "G")
new_data <- as.matrix(new_data)
new_data
new_data <- t(as.matrix(new_data))
new_data
alphabet <- c('A', 'B', 'C', 'D', 'E', 'F', 'G')
A_Gto1_7 <- function(a) (1:7)[alphabet == a]
new_data <- apply(new_data, 2, A_Gto1_7)
new_data
ms <- read.csv("../data/ms.csv", row.names = 1)
m <- ms[1,]
s <- ms[2,]
new_data <- scale(new_data, center = m, scale = s)
new_data <- t(as.matrix(apply(new_data, 2, A_Gto1_7)))
# 新たなウマ娘情報
new_data <- c("A", "G", "A", "B", "F", "G", "A", "C", "E", "G")
new_data <- t(as.matrix(new_data))
alphabet <- c('A', 'B', 'C', 'D', 'E', 'F', 'G')
A_Gto1_7 <- function(a) (1:7)[alphabet == a]
new_data <- t(as.matrix(apply(new_data, 2, A_Gto1_7)))
ms <- read.csv("../data/ms.csv", row.names = 1)
m <- ms[1,]
s <- ms[2,]
new_data <- scale(new_data, center = m, scale = s)
new_data
# 新たなウマ娘情報
new_data <- c("A", "G", "A", "B", "F", "G", "A", "C", "E", "G")
new_data <- t(as.matrix(new_data))
alphabet <- c('A', 'B', 'C', 'D', 'E', 'F', 'G')
A_Gto1_7 <- function(a) (1:7)[alphabet == a]
new_data <- t(as.matrix(sapply(new_data, A_Gto1_7)))
new_data
ms <- read.csv("../data/ms.csv", row.names = 1)
m <- ms[1,]
s <- ms[2,]
new_data <- scale(new_data, center = m, scale = s)
new_data
# ニューラルネットによる分類
model <- load_model_hdf5("../model/model1.h5")
pred <- as.array(model %>% predict(new_data) %>% k_argmax())
pred
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
pred
# 育成目標の提示
target <- read.csv("../data/target_status.csv")
target
# 育成目標の提示
target <- read.csv("../data/target_status.csv", row.names = 1)
target
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
pred <- as.array(model %>% predict(new_data) %>% k_argmax()) + 1
print(pred)
# 育成目標の提示
target <- read.csv("../data/target_status.csv", row.names = 1)
print(target[pred, ])
source('~/Documents/R/夏課題/src/teamrace.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/classify.R', echo=TRUE)
source('~/Documents/R/夏課題/src/teamrace.R', echo=TRUE)
View(status)
source('~/Documents/R/夏課題/src/teamrace.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/teamrace.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
status
View(status)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/learn.R', echo=TRUE)
source('~/Documents/R/夏課題/src/predict.R', echo=TRUE)
